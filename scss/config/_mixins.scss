//Media запрос
@mixin mediaBreakpoint($breakpoint, $type: min, $grid-breakpoints: $grid-breakpoints) {
    $width: map-get($grid-breakpoints, $breakpoint);
    $width: if($width != 0, $width, null);

    $fix: 0;
    @if $type == 'max' and $breakpoint != 'custom' {
        $fix: -1px;
    }

    @if $width {
        @media (#{$type}-width: $width + $fix) {
            @content;
        }
    } @else {
        @content;
    }
}


//Расчет из px в %
@function percentageWidth($width, $wrapper-width, $wrapper-padding) {
    $width: $width + 0px;
    $wrapper: $wrapper-max-width - $wrapper-padding;
    @return percentage($width / $wrapper);
}


@function pxToRem($input: 0, $base-font: 15) {
    $size: $input / $base-font;
    @return $size + rem;
}


//Совместимость с браузерами
@mixin crossStyles($style, $value) {
    #{$style}: #{$value};
    -o-#{$style}: #{$value};
    -moz-#{$style}: #{$value};
    -ms-#{$style}: #{$value};
    -webkit-#{$style}: #{$value};
}


//Центрированный элемент
@mixin centeredElement($horizontal:true, $vertical:true) {
    position: absolute;
    @if ($horizontal and $vertical) {
        top: 50%;
        left: 50%;
        @include crossStyles(transform, translate(-50%, -50%));
    } @else if ($horizontal) {
        left: 50%;
        @include crossStyles(transform, translate(-50%, 0));
    } @else if ($vertical) {
        top: 50%;
        @include crossStyles(transform, translate(0, -50%));
    }
}


//CSS колонки
@mixin columns($columns, $gap:1em) {
    column-count: $columns;
    -o-column-count: $columns;
    -moz-column-count: $columns;
    -webkit-column-count: $columns;
    column-gap: $gap;
    -o-column-gap: $gap;
    -moz-column-gap: $gap;
    -webkit-column-gap: $gap;
}


//Плавные переходы
@mixin transitionColor($time:$transition-time) {
    transition: color $time ease-in-out, background-color $time ease-in-out, border-color $time ease-in-out, opacity $time ease-in-out, box-shadow $time ease-in-out;
    -o-transition: color $time ease-in-out, background-color $time ease-in-out, border-color $time ease-in-out, opacity $time ease-in-out, box-shadow $time ease-in-out;
    -moz-transition: color $time ease-in-out, background-color $time ease-in-out, border-color $time ease-in-out, opacity $time ease-in-out, box-shadow $time ease-in-out;
    -webkit-transition: color $time ease-in-out, background-color $time ease-in-out, border-color $time ease-in-out, opacity $time ease-in-out, box-shadow $time ease-in-out;
}

@mixin transitionAll($time:$transition-time) {
    transition: all $time ease-out;
    -o-transition: all $time ease-out;
    -moz-transition: all $time ease-out;
    -webkit-transition: all $time ease-out;
}


//Плавное скрытие и показ
@mixin animateHide($time:$transition-time) {
    visibility: hidden;
    opacity: 0;
    transition: visibility 0s linear $time;
    -o-transition: visibility 0s linear $time;
    -moz-transition: visibility 0s linear $time;
    -webkit-transition: visibility 0s linear $time;
    @include transitionColor($time);
}

@mixin animateShow {
    visibility: visible;
    opacity: 1;
    transition-delay: 0ms;
    -o-transition-delay: 0ms;
    -moz-transition-delay: 0ms;
    -webkit-transition-delay: 0ms;
}


//Градиенты
@mixin linearGradient($deg, $color1, $position1, $color2, $position2) {
    background: -ms-linear-gradient($deg, $color1 $position1, $color2 $position2);
    background: -moz-linear-gradient($deg, $color1 $position1, $color2 $position2);
    background: -o-linear-gradient ($deg, $color1 $position1, $color2 $position2);
    background: -webkit-linear-gradient($deg, $color1 $position1, $color2 $position2);
    background: linear-gradient($deg, $color1 $position1, $color2 $position2);
}

@mixin radialGradient($positionCentrX, $positionCentrY, $color1, $color2 ) {
    background: -ms-radial-gradient(circle at $positionCentrX $positionCentrY, $color1, $color2);
    background: -moz-radial-gradient(circle at $positionCentrX $positionCentrY, $color1, $color2);
    background: -o-radial-gradient (circle at $positionCentrX $positionCentrY, $color1, $color2);
    background: -webkit-radial-gradient(circle at $positionCentrX $positionCentrY, $color1, $color2);
    background: radial-gradient(circle at $positionCentrX $positionCentrY, $color1, $color2);
}